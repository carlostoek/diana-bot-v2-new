"""Initial migration

Revision ID: 15e491e2767e
Revises:
Create Date: 2025-08-31 19:22:20.944406

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '15e491e2767e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gamification_achievements',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=False),
    sa.Column('rewards', sa.JSON(), nullable=False),
    sa.Column('icon_url', sa.String(), nullable=True),
    sa.Column('is_secret', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('max_level', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Telegram User ID'),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('gamification_points_transactions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(), nullable=False),
    sa.Column('points_change', sa.Integer(), nullable=False),
    sa.Column('balance_after', sa.Integer(), nullable=False),
    sa.Column('base_points', sa.Integer(), nullable=False),
    sa.Column('multipliers_applied', sa.JSON(), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gamification_points_transactions_user_id'), 'gamification_points_transactions', ['user_id'], unique=False)
    op.create_table('gamification_user_achievements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.String(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('points_awarded', sa.Integer(), nullable=False),
    sa.Column('special_rewards', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['gamification_achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gamification_user_achievements_achievement_id'), 'gamification_user_achievements', ['achievement_id'], unique=False)
    op.create_index(op.f('ix_gamification_user_achievements_user_id'), 'gamification_user_achievements', ['user_id'], unique=False)
    op.create_table('gamification_user_stats',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_points', sa.Integer(), nullable=False),
    sa.Column('available_points', sa.Integer(), nullable=False),
    sa.Column('current_streak', sa.Integer(), nullable=False),
    sa.Column('longest_streak', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('experience_points', sa.Integer(), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_streak_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('vip_multiplier', sa.Float(), nullable=False),
    sa.Column('streak_multiplier', sa.Float(), nullable=False),
    sa.Column('event_multiplier', sa.Float(), nullable=False),
    sa.Column('daily_action_counts', sa.JSON(), nullable=False),
    sa.Column('last_daily_reset', sa.DateTime(timezone=True), nullable=True),
    sa.Column('show_in_leaderboards', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('gamification_user_stats')
    op.drop_index(op.f('ix_gamification_user_achievements_user_id'), table_name='gamification_user_achievements')
    op.drop_index(op.f('ix_gamification_user_achievements_achievement_id'), table_name='gamification_user_achievements')
    op.drop_table('gamification_user_achievements')
    op.drop_index(op.f('ix_gamification_points_transactions_user_id'), table_name='gamification_points_transactions')
    op.drop_table('gamification_points_transactions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('gamification_achievements')
    # ### end Alembic commands ###
